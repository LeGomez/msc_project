name: 'Terraform'

on:
  push:
    branches:
    - "main"
  pull_request:
  workflow_dispatch:

env:
  TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
  TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
  TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
  TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
  TF_VAR_postgres_db: ${{ secrets.POSTGRES_DB }}
  TF_VAR_postgres_port: ${{ secrets.POSTGRES_PORT }}
  TF_VAR_postgres_host: ${{ secrets.POSTGRES_HOST }}
  TF_VAR_twitter_token: ${{ secrets.TWITTER_TOKEN }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.5

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: |
        export TF_VAR_aws_access_key=$TF_VAR_aws_access_key
        export TF_VAR_aws_secret_key=$TF_VAR_aws_secret_key
        export TF_VAR_DB_PASSWORD=$TF_VAR_DB_PASSWORD
        export TF_VAR_DB_USERNAME=$TF_VAR_DB_USERNAME
        export TF_VAR_POSTGRES_DB=$TF_VAR_POSTGRES_DB
        export TF_VAR_POSTGRES_PORT=$TF_VAR_POSTGRES_PORT
        export TF_VAR_POSTGRES_HOST=$TF_VAR_POSTGRES_HOST
        export TF_VAR_TWITTER_TOKEN=$TF_VAR_TWITTER_TOKEN
        terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: |
        export TF_VAR_aws_access_key=$TF_VAR_aws_access_key
        export TF_VAR_aws_secret_key=$TF_VAR_aws_secret_key
        export TF_VAR_DB_PASSWORD=$TF_VAR_DB_PASSWORD
        export TF_VAR_DB_USERNAME=$TF_VAR_DB_USERNAME
        export TF_VAR_POSTGRES_DB=$TF_VAR_POSTGRES_DB
        export TF_VAR_POSTGRES_PORT=$TF_VAR_POSTGRES_PORT
        export TF_VAR_POSTGRES_HOST=$TF_VAR_POSTGRES_HOST
        export TF_VAR_TWITTER_TOKEN=$TF_VAR_TWITTER_TOKEN
        terraform plan -input=false

      # On push to "main", build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: |
        export TF_VAR_aws_access_key=$TF_VAR_aws_access_key
        export TF_VAR_aws_secret_key=$TF_VAR_aws_secret_key
        export TF_VAR_DB_PASSWORD=$TF_VAR_DB_PASSWORD
        export TF_VAR_DB_USERNAME=$TF_VAR_DB_USERNAME
        export TF_VAR_POSTGRES_DB=$TF_VAR_POSTGRES_DB
        export TF_VAR_POSTGRES_PORT=$TF_VAR_POSTGRES_PORT
        export TF_VAR_POSTGRES_HOST=$TF_VAR_POSTGRES_HOST
        export TF_VAR_TWITTER_TOKEN=$TF_VAR_TWITTER_TOKEN
        terraform apply -auto-approve -input=false
